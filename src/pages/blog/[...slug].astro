---
import { type CollectionEntry, getCollection } from 'astro:content';

import BaseLayout from '../../layouts/BaseLayout.astro';

import ContactCTA from '../../components/ContactCTA.astro';
import Hero from '../../components/Hero.astro';
import Icon from '../../components/Icon.astro';
import Pill from '../../components/Pill.astro';
import { render } from 'astro:content';
import { Image } from 'astro:assets';
interface Props {
  entry: CollectionEntry<'blog'>;
}

export const prerender = true;

// This is a dynamic route that generates a page for every Markdown file in src/content/
// Read more about dynamic routes and this `getStaticPaths` function in the Astro docs:
// https://docs.astro.build/en/core-concepts/routing/#dynamic-routes
export async function getStaticPaths() {
  const posts = await getCollection('blog');
  return posts.map(entry => ({
    params: { slug: entry.id.split('/')[0] },
    props: { entry },
  }));
}

const { entry } = Astro.props;
const { Content } = await render(entry);
---

<BaseLayout 
  title={entry.data.title} 
  description={entry.data.description}
  background="bg-blog"
>
  <div class="stack gap-20">
    <div class="stack gap-15">
      <header class="hero-section">
        <div class="wrapper stack gap-2">
          <a class="back-link" href="/"><Icon icon="arrow-left" /> Back to Blog</a>
          <div class="hero-content">
            <Hero title={entry.data.title} align="start">
              <div class="metadata">
                <time datetime={entry.data.publishDate.toISOString()}>
                  {entry.data.publishDate.toLocaleDateString('en-US', {
                    year: 'numeric',
                    month: 'long',
                    day: 'numeric',
                  })}
                </time>
                <div class="tags">
                  {entry.data.tags.map((t) => <Pill>{t}</Pill>)}
                </div>
              </div>
              {entry.data.img && (
                <div class="featured-image">
                  <Image 
                    src={entry.data.img} 
                    alt={entry.data.img_alt || ''} 
                    width={800}
                    height={800}
                    quality={80}
                    format="webp"
                  />
                </div>
              )}
              <p class="description">{entry.data.description}</p>
            </Hero>
          </div>
        </div>
      </header>
      <main class="wrapper">
        <article class="content">
          <div class="prose">
            <Content />
          </div>
        </article>
      </main>
    </div>
    <ContactCTA />
  </div>
</BaseLayout>

<style>
  .hero-section {
    padding-bottom: 2.5rem;
    border-bottom: 1px solid var(--gray-800);
    background: linear-gradient(to bottom, var(--gray-999), transparent);
  }

  .hero-content {
    padding: 2rem 0;
  }

  .metadata {
    display: flex;
    flex-wrap: wrap;
    gap: 1.5rem;
    align-items: center;
    margin-bottom: 1rem;
  }

  time {
    color: var(--gray-400);
    font-size: var(--text-md);
  }

  .tags {
    display: flex;
    gap: 0.5rem;
  }

  .featured-image {
    margin: 2rem 0;
    overflow: hidden;
  }

  .featured-image img {
    width: 50%;
    height: auto;
    object-fit: cover;
  }

  .prose {
    /* max-width: 65ch; */
    margin: 0 auto;
    color: var(--gray-200);
    line-height: 1.8;
  }

  .prose :global(h2) {
    color: var(--gray-0);
    font-size: var(--text-2xl);
    margin: 2.5rem 0 1.5rem;
  }

  .prose :global(h3) {
    color: var(--gray-0);
    font-size: var(--text-xl);
    margin: 2rem 0 1rem;
  }

  .prose :global(p) {
    margin-bottom: 1.5rem;
    font-size: var(--text-xl);
  }

  .prose :global(img) {
    border-radius: 1rem;
    box-shadow: var(--shadow-sm);
    margin: 2rem 0;
  }
</style>
